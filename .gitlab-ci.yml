# .gitlab-ci.yml

image: ekino/ci-node@sha256:814274a6cd3b09aa65a4770df8454db3c32dbce227a20cc0602ded94711f3a14

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
# - validate
# - test
- release
- deploy
- post-deploy
# - cleanup

variables:
  AWS_DEFAULT_REGION: eu-west-1
  RELEASE_PROD_REF: prod
  RELEASE_STAGE_REF: stage

before_script:
  - APP_VERSION=$(jq -r '.version' <package.json)
  - "echo APP_VERSION: v$APP_VERSION"
  - node --version

# invalid_ref:
#   stage: validate
#   script:
#     - echo "Invalid ref name - $CI_COMMIT_REF_NAME"
#     - exit 1
#   rules:
#     - if: $CI_COMMIT_REF_NAME !~ /^prod|dev|main|new\/.+|fix\/.+|doc\/.+|infra\/.+|qa\/.+$/
#       when: always

deploy_stage:
  stage: deploy
  environment:
    name: staging
    url: https://grantai-$STAGE_ENV_DNS_ALIAS_KEY.stage.prepairelabs.com
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_REF_NAME == $RELEASE_STAGE_REF
  script:
    - apt-get update
    - apt-get install -y python3 g++ make --no-install-recommends --option=Dpkg::Options::=--force-confdef
    - sh .devops/env/deploy/gitlab/deploy.sh $STAGE_AWS_ACCESS_KEY_ID $STAGE_AWS_SECRET_ACCESS_KEY $AWS_DEFAULT_REGION $STAGE_ENV_DNS_ALIAS_KEY stage "" stage.prepairelabs.com

deploy_prod:
  stage: deploy
  environment:
    name: production
    url: https://grantai.com
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_REF_NAME == $RELEASE_PROD_REF
  script:
    - apt-get update
    - apt-get install -y python3 g++ make --no-install-recommends --option=Dpkg::Options::=--force-confdef
    - echo $PROD_AWS_ACCESS_KEY_ID
    - echo $PROD_AWS_SECRET_ACCESS_KEY
    - echo $AWS_DEFAULT_REGION
    - sh .devops/env/deploy/gitlab/deploy.sh $PROD_AWS_ACCESS_KEY_ID $PROD_AWS_SECRET_ACCESS_KEY $AWS_DEFAULT_REGION "" prod

tag_prod:
  stage: post-deploy
  environment:
    name: production
    url: https://grantai.com
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_REF_NAME == $RELEASE_PROD_REF
  script:
    # .gitconfig
    - touch ~/.gitconfig
    - git config --global user.name "$PROJECT_BOT_USERNAME"
    - git config --global user.email "$PROJECT_BOT_EMAIL"
    # fresh clone
    - mkdir ~/source && cd $_
    - git clone http://$CI_PROJECT_NAME:$PROJECT_BOT_PAT@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
    - cd $CI_PROJECT_NAME
    # Version tag
    - git checkout prod
    - git tag -fa "v$APP_VERSION" -m "release v$APP_VERSION"
    - git push --tags
